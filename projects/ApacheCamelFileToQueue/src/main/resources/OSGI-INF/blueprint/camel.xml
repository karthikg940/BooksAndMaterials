<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:cxf="http://camel.apache.org/schema/cxf"
	xsi:schemaLocation="
          http://www.springframework.org/schema/beans 
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://camel.apache.org/schema/spring 
          http://camel.apache.org/schema/spring/camel-spring.xsd
          http://camel.apache.org/schema/cxf
		  http://camel.apache.org/schema/cxf/camel-cxf.xsd       
          ">

	<!-- <bean id="hellobean" class="com.virtusa.bean.HelloBean"/> -->
	<!-- <bean id="invoke" class="com.virtusa.bean.InvokeWithProcessorRoute"/> -->

	<!-- <bean id="properties" class="org.apache.camel.component.properties.PropertiesComponent"> 
		<property name="location" value="classpath:external.properties"></property> 
		</bean> <camel:camelContext id="context" > <camel:propertyPlaceholder id="properties" 
		location="classpath:external.properties"/> <camel:route> <camel:from uri="{{file.inbox}}?noop=true"/> 
		<camel:to uri="{{file.outbox}}"/> </camel:route> </camel:camelContext> </beans> -->

	<!-- <cxf:cxfEndpoint id="cxfEndPoint" address="http://localhost:9000/order/" 
		serviceClass="com.virtusa.component.OrderEndPoint"/> <camel:camelContext 
		id="context" > <camel:route> <camel:from uri="cxf:bean:OrderEndPoint"/> <camel:to 
		uri="log:input?showAll=true&level=INFO"/> </camel:route> </camel:camelContext> 
		</beans> -->




	<!-- JPA Configuration setting starts here -->

	<bean id="jpa" class="org.apache.camel.component.jpa.JpaComponent">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="camel" />
		<property name="jpaVendorAdapter" ref="jpaAdapter" />
	</bean>
	<bean id="jpaAdapter" class="org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter">
		<property name="databasePlatform" value="org.apache.openjpa.jdbc.sql.HSQLDictionary" />
		<property name="database" value="HSQL" />
	</bean>
	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager">
			<bean class="org.springframework.orm.jpa.JpaTransactionManager">
				<property name="entityManagerFactory" ref="entityManagerFactory" />
			</bean>
		</property>
	</bean>
</beans>